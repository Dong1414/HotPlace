<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="com.dylim.hot.member.mapper.MemberMapper">
	<select id="idCheck" parameterType="String" resultType="int">
		<![CDATA[
			SELECT COUNT(id) FROM member WHERE mber_id = #{id}			
		]]>
	</select>
	<insert id="signUpInsert" parameterType="com.dylim.hot.member.MemberVO">
			INSERT INTO member
			VALUES
				(
					null
					,#{mberId}
					,#{mberPassword}
					,#{mberName}
					,#{mberBrthd}
					,#{mberTelNo}
					,#{mberEmail}
					,#{mberId}
					,now()
					,#{mberId}
					,now()
					,"N"
					,#{mberNickName}
					,#{naverConnectId}
					,#{kakaoConnectId}
					,#{emailYn}
					,#{telYn}
					,#{attachFileMasterId}
					,now()
					
				)
	</insert>
	<select id="signUpGetId" parameterType="com.dylim.hot.member.MemberVO" resultType="string">
		select 
			<choose>
				<when test='snsMod.equals("n")'>
					concat(nextval('naver_seq'),"@",#{snsMod})
				</when>
				<otherwise>
					concat(nextval('kakao_seq'),"@",#{snsMod})
				</otherwise>
			</choose>
		from
			dual	
	</select>
	
	<select id="loadUserByUserId" parameterType="com.dylim.hot.member.MemberVO" resultType="com.dylim.hot.member.MemberVO">
			SELECT 
				mber_id as mberId,
				mber_password as mberPassword,
				mber_name as mberName,
				mber_nick_name as mberNickName,
				mber_brthd as mberBrthd,
				mber_tel_no as mberTelNo,
				mber_email as mberEmail,
				last_pw_dt as lastPwDt
			FROM
				member
			WHERE
				del_yn = "N"
				<choose>
					<when test='snsMod != null'>
						<if test='snsMod.equals("n")'>
							AND naver_connect_id = #{naverConnectId}
						</if>
						<if test='snsMod.equals("k")'>
							AND kakao_connect_id = #{kakaoConnectId} 
						</if>
					</when>
					<otherwise>
						AND mber_id = #{mberId}
					</otherwise>
				</choose>
			  			
	</select>
	
	<insert id="friendRequest" parameterType="String">
		<![CDATA[  
			INSERT INTO member_relationship_history
			VALUES
				(
					null
					,#{loginId}
				    ,#{mberId}
				    ,"1"
				    ,now()	
				    ,now()
				)
		]]>
	</insert>
	
	<select id="friendCheck" parameterType="String" resultType="int">
		<![CDATA[  
			SELECT
				COUNT(mber_second_id)
			FROM
				 member_relationship
			WHERE
				mber_first_id = #{loginId}
				AND mber_second_id = #{mberId}	 
		]]>		
	</select>
	<select id="requestCheck" parameterType="String" resultType="int">
		<![CDATA[  
			SELECT
				COUNT(id)
			FROM
				 member_relationship_history
			WHERE
				mber_first_id = #{mberId}
				AND mber_second_id = #{loginId}	
				AND relation_type = "1"
		]]>		
	</select>
	
	<select id="searchByNickName" parameterType="com.dylim.hot.member.MemberVO" resultType="com.dylim.hot.member.MemberVO">
			SELECT 
				t1.mber_id as mberId,
				t1.mber_name as mberName,
				t1.mber_nick_name as mberNickName,
				(select attach_file_id 
					from 
					attach_file t4
					where t1.attach_file_master_id = t4.attach_file_master_id and del_yn = 'N') as attachFileId,  
				t2.relation_type as relationType,
				t3.relation as relation
			FROM 
				member t1
				LEFT OUTER JOIN member_relationship_history t2
				ON t2.mber_first_id = #{loginId} 
				AND t2.mber_second_id = t1.mber_id 
				LEFT OUTER JOIN member_relationship t3
				ON t3.mber_first_id =  #{loginId}
				AND t3.mber_second_id = t1.mber_id
			WHERE  
				mber_nick_name LIKE CONCAT('%',#{mberNickName},'%')
				and del_yn = 'N'
				and mber_Id != #{loginId}
	</select>
	
	<select id="friendRequestList" parameterType="String" resultType="com.dylim.hot.member.MemberVO">
		<![CDATA[
			SELECT
				tb1.mber_id as mberId,
				tb1.mber_nick_name as mberNickName,
				(select attach_file_id 
					from 
					attach_file tb2
					where tb1.attach_file_master_id = tb2.attach_file_master_id and del_yn = 'N') as attachFileId
			FROM
				member tb1,
				(
					SELECT
						mber_first_id,
						mber_second_id		
					FROM
						member_relationship_history
					WHERE
						mber_second_id = #{loginId}		
						and relation_type = '1'
				)tb
			WHERE 
				mber_id = tb.mber_first_id
				AND del_yn = "N"
		]]>
	</select>	
	<insert id="friendAccept" parameterType="String">
		<![CDATA[
			insert into 
				member_relationship
			value(
				#{mberId},
				#{loginId},
				now(),
				now(),
				"Y"
			),
			(
				#{loginId},
				#{mberId},
				now(),
				now(),
				"Y"
			)
		]]>
	</insert>	
	<select id="friendtList" parameterType="String" resultType="com.dylim.hot.member.MemberVO">
		<![CDATA[
		select
			tb4.mber_id as mberId,
			tb4.mber_nick_name as mberNickName,
			(select mber_nick_name from member where mber_id = mber_second_id) as mberNickName,
			(select attach_file_id 
			from 
				attach_file tb2,
				(select attach_file_master_id from member where mber_id = tb2.mber_second_id) tb3
				where tb3.attach_file_master_id = tb2.attach_file_master_id and del_yn = 'N') as attachFileId
		from (
				SELECT
					tb1.mber_second_id
				FROM
					member_relationship tb1
				WHERE 
					mber_first_id = #{loginId}
			) tb2,
			member tb4
		where
			tb4.mber_id = tb2.mber_second_id
			and tb4.del_yn = 'N';
		]]>
	</select>	
	<delete id="friendDelHistory" parameterType="String">
		<![CDATA[
			delete from
				member_relationship_history
			where
				mber_first_id in(#{loginId}, #{mberId})
				and mber_second_id	in(#{loginId}, #{mberId})
		]]>
	</delete>
	<delete id="friendDel" parameterType="String">
		<![CDATA[
			delete from
				member_relationship
			where
				mber_first_id in(#{loginId}, #{mberId})
				and mber_second_id	in(#{loginId}, #{mberId})
		]]>
	</delete>
	
	<select id="snsIdCheck" parameterType="com.dylim.hot.member.MemberVO" resultType="com.dylim.hot.member.MemberVO">
		SELECT 
				mber_id as mberId,
				mber_password as mberPassword,
				mber_name as mberName,
				mber_nick_name as mberNickName,
				mber_brthd as mberBrthd,
				mber_tel_no as mberTelNo,
				mber_email as mberEmail,
				naver_connect_id as naverConnectId,
				kakao_connect_id as kakaoConnectId
			FROM
				member
			WHERE
				del_yn = "N"
				<if test='snsMod.equals("n")'>
					AND naver_connect_id = #{naverConnectId}
				</if>
				<if test='snsMod.equals("k")'>
					AND kakao_connect_id = #{kakaoConnectId} 
				</if>
	</select>
	
	<select id="getByUserId" parameterType="com.dylim.hot.member.MemberVO" resultType="com.dylim.hot.member.MemberVO">
			SELECT 
				mber_id as mberId,
				mber_password as mberPassword,
				mber_name as mberName,
				mber_nick_name as mberNickName,
				mber_brthd as mberBrthd,
				mber_tel_no as mberTelNo,
				mber_email as mberEmail,
				kakao_connect_id as kakaoConnectId,
				naver_connect_id as naverConnectId,
				tel_yn as telYn,
				email_yn as emailYn,
				attach_file_master_id as attachFileMasterId,
				(select attach_file_id from attach_file where attach_file_master_id = tb1.attach_file_master_id and del_yn = "N") as attachFileId
			FROM
				member tb1
			WHERE
				del_yn = "N"
				and mber_id = #{loginId}			  			
	</select>
	
	<update id="memberModify" parameterType="com.dylim.hot.member.MemberVO" >
			update member
			set
				mber_nick_name = #{mberNickName},
				mber_brthd = #{mberBrthd},
				mber_tel_no = #{mberTelNo},
				mber_email = #{mberEmail},
				tel_yn = #{telYn},
				email_yn = #{emailYn},
				attach_file_master_id = #{attachFileMasterId}
			WHERE
				del_yn = "N"
				and mber_id = #{mberId}			  			
	</update>
	
	<select id="findLoginId" parameterType="com.dylim.hot.member.MemberVO" resultType="com.dylim.hot.member.MemberVO">
		SELECT 
				mber_id as mberId
				<if test='mberEmail != null and !mberEmail.equals("")'>
					,mber_email as mberEmail
				</if>
				<if test='mberTelNo != null and !mberTelNo.equals("")'>
					,mber_tel_no as mberTelNo
				</if>
				,tel_yn as telYn
				,email_yn as emailYn
				,naver_connect_id as naverConnectId
				,kakao_connect_id as kakaoConnectId
			FROM
				member
			WHERE
				del_yn = "N"
				and mber_name = #{mberName}
				<if test='mberEmail != null and !mberEmail.equals("")'>
					and mber_email = #{mberEmail}
					and email_yn = 'Y'
				</if>
				<if test='mberTelNo != null and !mberTelNo.equals("")'>
					and mber_tel_no = #{mberTelNo}
					and tel_yn = 'Y'
				</if>
	</select>
	
	<update id="changePw" parameterType="com.dylim.hot.member.MemberVO" >
			update member
			set
				mber_password = #{mberPassword}
				,last_pw_dt = now()
			WHERE
				del_yn = "N"
				and mber_id = #{mberId}			  			
	</update>
	
	<update id="deleteMember" parameterType="com.dylim.hot.member.MemberVO" >
			update member
			set
				mber_password = null
				,mber_name = null
				,mber_brthd = null
				,mber_tel_no = null
				,mber_email = null
				,regist_id = null
				,update_dt = now()
				,del_yn = 'Y'
				,mber_nick_name = null
				,naver_connect_id = null
				,kakao_connect_id = null
				,email_yn = null
				,tel_yn = null
				,attach_file_master_id = null
			WHERE
				del_yn = "N"
				and mber_id = #{mberId}			  			
	</update>
	
	<delete id="deleteMemberRelationship" parameterType="com.dylim.hot.member.MemberVO">
		DELETE FROM tb1, tb2
			using
			member_relationship AS tb1
		    left join member_relationship_history AS tb2		    
		    on tb2.mber_first_id = #{mberId}
		    or tb2.mber_second_id = #{mberId}
		WHERE tb1.mber_first_id = #{mberId} or tb1.mber_second_id = #{mberId};
	</delete>
	
	<update id="deleteMemberArticle" parameterType="com.dylim.hot.member.MemberVO">
		UPDATE attach_file AS tb1, attach_file_master AS tb2, map_review AS tb3, reple as tb4
		      SET  tb1.del_yn = 'Y',
		           tb2.del_yn = 'Y',
				tb3.del_yn = 'Y',
		        tb4.del_yn = 'Y'    
		WHERE  tb1.regist_id = "test123" and tb2.regist_id = "test123" and tb3.regist_id = "test123" and tb4.regist_id = "test123";
	</update>
	
	
</mapper>