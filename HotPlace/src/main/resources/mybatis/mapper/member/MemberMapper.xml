<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="com.dylim.hot.member.mapper.MemberMapper">
	<select id="idCheck" parameterType="String" resultType="int">
		<![CDATA[
			SELECT COUNT(id) FROM member WHERE mber_id = #{id}			
		]]>
	</select>
	<insert id="signUpInsert" parameterType="com.dylim.hot.member.MemberVO">
			INSERT INTO member
			VALUES
				(
					null
					<choose>
						<when test='snsMod != null'>
							<if test='snsMod.equals("n")'>
								,concat(nextval('naver_seq'),"@",#{snsMod})
							</if>
							<if test='snsMod.equals("k")'>
								,concat(nextval('kakao_seq'),"@",#{snsMod}) 
							</if>
						</when>
						<otherwise>
						,#{mberId}
						</otherwise>
					</choose>
					,#{mberPassword}
					,#{mberName}
					,#{mberBrthd}
					,#{mberTelNo}
					,#{mberEmail}
					,#{mberId}
					,now()
					,#{mberId}
					,now()
					,"N"
					,#{mberNickName}
					,#{naverConnectId}
					,#{kakaoConnectId}
					
				)
	</insert>
	<select id="loadUserByUserId" parameterType="com.dylim.hot.member.MemberVO" resultType="com.dylim.hot.member.MemberVO">
			SELECT 
				mber_id as mberId,
				mber_password as mberPassword,
				mber_name as mberName,
				mber_nick_name as mberNickName,
				mber_brthd as mberBrthd,
				mber_tel_no as mberTelNo,
				mber_email as mberEmail
			FROM
				member
			WHERE
				del_yn = "N"
				<choose>
					<when test='snsMod != null'>
						<if test='snsMod.equals("n")'>
							AND naver_connect_id = #{naverConnectId}
						</if>
						<if test='snsMod.equals("k")'>
							AND kakao_connect_id = #{kakaoConnectId} 
						</if>
					</when>
					<otherwise>
						AND mber_id = #{mberId}
					</otherwise>
				</choose>
			  			
	</select>
	
	<insert id="friendRequest" parameterType="String">
		<![CDATA[  
			INSERT INTO member_relationship_history
			VALUES
				(
					null
					,#{loginId}
				    ,#{mberId}
				    ,"1"
				    ,now()	
				    ,now()
				)
		]]>
	</insert>
	
	<select id="friendCheck" parameterType="String" resultType="int">
		<![CDATA[  
			SELECT
				COUNT(mber_second_id)
			FROM
				 member_relationship
			WHERE
				mber_first_id = #{loginId}
				AND mber_second_id = #{mberId}	 
		]]>		
	</select>
	<select id="requestCheck" parameterType="String" resultType="int">
		<![CDATA[  
			SELECT
				COUNT(id)
			FROM
				 member_relationship_history
			WHERE
				mber_first_id = #{mberId}
				AND mber_second_id = #{loginId}	
				AND relation_type = "1"
		]]>		
	</select>
	
	<select id="searchById" parameterType="com.dylim.hot.member.MemberVO" resultType="com.dylim.hot.member.MemberVO">
		<![CDATA[
			SELECT 
				t1.mber_id as mberId,
				t1.mber_name as mberName,
				t1.mber_nick_name as mberNickName,
				t2.relation_type as relationType,
				t3.relation as relation
			FROM 
				member t1
				LEFT OUTER JOIN member_relationship_history t2
				ON t2.mber_first_id = #{loginId} 
				AND t2.mber_second_id = #{mberId} 
				LEFT OUTER JOIN member_relationship t3
				ON t3.mber_first_id =  #{loginId}
				AND t3.mber_second_id = #{mberId}
			WHERE  
				mber_id = #{mberId} and del_yn = "N";
		]]>
	</select>
	
	<select id="friendRequestList" parameterType="String" resultType="com.dylim.hot.member.MemberVO">
		<![CDATA[
			SELECT
				mber_id as mberId,
				mber_nick_name as mberNickName
			FROM
				member,
				(
					SELECT
						mber_first_id,
						mber_second_id		
					FROM
						member_relationship_history
					WHERE
						mber_second_id = #{loginId}		
						and relation_type = '1'
				)tb
			WHERE 
				mber_id = tb.mber_first_id
				AND del_yn = "N"
		]]>
	</select>	
	<insert id="friendAccept" parameterType="String">
		<![CDATA[
			insert into 
				member_relationship
			value(
				#{mberId},
				#{loginId},
				now(),
				now(),
				"Y"
			),
			(
				#{loginId},
				#{mberId},
				now(),
				now(),
				"Y"
			)
		]]>
	</insert>	
	<select id="friendtList" parameterType="String" resultType="com.dylim.hot.member.MemberVO">
		<![CDATA[
			SELECT
				mber_second_id as mberId,
				(select mber_nick_name from member where mber_id = mber_second_id) as mberNickName
			FROM
				member_relationship tb1
			WHERE 
				mber_first_id = #{loginId}
		]]>
	</select>	
	<delete id="friendDelHistory" parameterType="String">
		<![CDATA[
			delete from
				member_relationship_history
			where
				mber_first_id in(#{loginId}, #{mberId})
				and mber_second_id	in(#{loginId}, #{mberId})
		]]>
	</delete>
	<delete id="friendDel" parameterType="String">
		<![CDATA[
			delete from
				member_relationship
			where
				mber_first_id in(#{loginId}, #{mberId})
				and mber_second_id	in(#{loginId}, #{mberId})
		]]>
	</delete>
	
	<select id="snsIdCheck" parameterType="com.dylim.hot.member.MemberVO" resultType="com.dylim.hot.member.MemberVO">
		SELECT 
				mber_id as mberId,
				mber_password as mberPassword,
				mber_name as mberName,
				mber_nick_name as mberNickName,
				mber_brthd as mberBrthd,
				mber_tel_no as mberTelNo,
				mber_email as mberEmail
			FROM
				member
			WHERE
				del_yn = "N"
				<if test='snsMod.equals("n")'>
					AND naver_connect_id = #{naverConnectId}
				</if>
				<if test='snsMod.equals("k")'>
					AND kakao_connect_id = #{kakaoConnectId} 
				</if>
	</select>
</mapper>